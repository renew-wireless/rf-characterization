/*
 * Gain table used for AGC
 * Rice University
 */


#include <cstdio>
#include <stdexcept>

// OLD - #define NUM_GAIN_LEVELS 109
/*
#define NUM_RX_GAIN_LEVELS_LO 103    // 2.5GHz (3 TO 105)
#define NUM_RX_GAIN_LEVELS_HI 100    // 3.6GHz (3 TO 102)
*/

/////////////////////////////////////////////////////////////////////////////////
// RF MOD address space
/////////////////////////////////////////////////////////////////////////////////
//addresses
static const int RF_MOD_CTRL0_ADDR           = 0x00;
static const int RF_MOD_CTRL1_ADDR           = 0x01;
static const int RF_MOD_CTRL2_ADDR           = 0x02;
static const int RF_MOD_CTRL3_ADDR           = 0x03;

//control bits
static const int RF_MOD_CTRL_TRX_AUTO         = (15);
static const int RF_MOD_CTRL_RF_IDLE          = (13);
static const int RF_MOD_CTRL_LNA2_EN          = (12);
static const int RF_MOD_CTRL_UHF_RX_SEL_SHIFT = 8;
static const int RF_MOD_CTRL_UHF_RX_SEL_MASK  = (0xf);
static const int RF_MOD_FDD_EN_B              = (1);
static const int RF_MOD_FDD_EN_A              = (0);
static const int RF_MOD_CTRL_RX_HISEL         = (3);
static const int RF_MOD_CTRL_TX_HISEL         = (2);

//control1 bits
static const int RF_MOD_CTRL1_PA1_EN          = (0);
static const int RF_MOD_CTRL1_PA2_EN          = (1);
static const int RF_MOD_CTRL1_PA3_EN          = (2);
static const int RF_MOD_CTRL1_I2C_RST         = (9);
static const int RF_MOD_CTRL1_RXATTEN1_SHIFT  = 10;
static const int RF_MOD_CTRL1_RXATTEN1_MASK   = (0x3);
static const int RF_MOD_CTRL1_RXATTEN2_SHIFT  = 6;
static const int RF_MOD_CTRL1_RXATTEN2_MASK   = (0x3);
static const int RF_MOD_CTRL1_TXATTEN_SHIFT   = 4;
static const int RF_MOD_CTRL1_TXATTEN_MASK    = (0x3);
static const int RF_MOD_CTRL1_TXB_OVR         = (12);
static const int RF_MOD_CTRL1_TXA_OVR         = (13);

//control2 bits
static const int RF_MOD_CTRL2_LNA1_EN_SHIFT  = 0;
static const int RF_MOD_CTRL2_LNA1_EN_MASK   = 0x3;
static const int RF_MOD_CTRL2_TXATTEN1_SHIFT = 2;
static const int RF_MOD_CTRL2_TXATTEN1_MASK  = 0x3;
static const int RF_MOD_CTRL2_TXATTEN2_SHIFT = 4;
static const int RF_MOD_CTRL2_TXATTEN2_MASK  = 0x3;
static const int RF_MOD_CTRL2_SW_CMD_SHIFT   = 12;
static const int RF_MOD_CTRL2_SW_CMD_MASK    = 0xf;

// CBRS Board Rev B or C
int _revb = 1;
int _ctrl0 = 0, _ctrl1 = 0, _ctrl2 = 0, _ctrl3 = 0;

// See /IrisServices/sklk_fe/sklk_iris_fe_regs.h
#define _SKLK_BITS(reg, bits, shift, mask) \
    reg = ((reg & (~((mask) << (shift)))) | ((bits & (mask)) << (shift)))

#define SKLK_BITS(reg, bits, prefix) \
    _SKLK_BITS(reg, bits, prefix ## _SHIFT, prefix ## _MASK)

#define SKLK_BIT(reg, bit, shift) \
    _SKLK_BITS(reg, bit, shift, 0x1)


enum SklkFeDir
{
    SKLK_FE_RX,
    SKLK_FE_TX,
};


// gain table for 2.5GHz with CBRS board 
// gainTable  format: [total_gain, ATTN, LNA1, LNA2, LNA, TIA, PGA]
/* 
int gainTable[NUM_GAIN_LEVELS][7] = {
{	15 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -12 	 },
{	16 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -11 	 },
...
{	122  , 	 0 	     , 	 33 	 , 	 17  , 	 29  , 	 12  , 	 19 	 },
{	123  , 	 0 	     , 	 33 	 , 	 17  , 	 30  , 	 12  , 	 19 	 },
};
*/

/*
// gain table for 2.5GHz with CBRS board
// gainTable  format: [total_gain, ATTN, LNA1, LNA2, LNA, TIA, PGA]
// Note: Due to LNA1 being always ON (33dB), min total gain is 3
int gainTableRx_LO[NUM_RX_GAIN_LEVELS_LO][7] = {                        //   EVM
{	3 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -12 	 }, // 	 2.0
{	4 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -11 	 }, // 	 1.33
{	5 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -10 	 }, // 	 1.67
{	6 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -12 	 }, // 	 1.0
{	7 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -8 	 }, // 	 1.0
{	8 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -10 	 }, // 	 1.0
{	9 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -12 	 }, // 	 0.0
{	10 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 6 	 , 	 0 	 , 	 -11 	 }, // 	 0.0
{	11 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -4 	 }, // 	 0.0
{	12 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -6 	 }, // 	 0.0
{	13 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -8 	 }, // 	 0.0
{	14 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 9 	 , 	 0 	 , 	 -10 	 }, // 	 0.0
{	15 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -9 	 }, // 	 0.0
{	16 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 12  , 	 -11 	 }, // 	 0.0
{	17 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -7 	 }, // 	 0.0
{	18 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 9 	 , 	 0 	 , 	 -12 	 }, // 	 0.0
{	19 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 9 	 , 	 -11 	 }, // 	 0.0
{	20 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 9 	 , 	 -7 	 }, // 	 0.0
{	21 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 12  , 	 0 	 , 	 -12 	 }, // 	 0.0
{	22 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 7 	     }, // 	 0.0
{	23 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -7 	 }, // 	 0.0
{	24 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 9 	 , 	 -6 	 }, // 	 0.0
{	25 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 9 	 , 	 9 	 , 	 -8 	 }, // 	 0.0
{	26 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 12  , 	 -7 	 }, // 	 0.0
{	27 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 9 	 , 	 -6 	 }, // 	 0.0
{	28 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 6 	 , 	 0 	 , 	 -5 	 }, // 	 0.0
{	29 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 9 	 , 	 -4 	 }, // 	 0.0
{	30 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 9 	 , 	 0 	 , 	 6 	     }, // 	 0.0
{	31 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 9 	 , 	 0 	 , 	 -5 	 }, // 	 0.0
{	32 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 9 	 , 	 -7 	 }, // 	 0.0
{	33 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 3 	 , 	 0 	 , 	 -8 	 }, // 	 0.0
{	34 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 6 	 , 	 0 	 , 	 1 	     }, // 	 0.0
{	35 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 6 	 , 	 9 	 , 	 5 	     }, // 	 0.0
{	36 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 18  , 	 9 	 , 	 -12 	 }, // 	 0.0
{	37 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 19 	 }, // 	 0.0
{	38 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 30  , 	 0 	 , 	 -7 	 }, // 	 0.0
{	39 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 25  , 	 0 	 , 	 -7 	 }, // 	 0.0
{	40 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 15  , 	 9 	 , 	 1 	     }, // 	 0.0
{	41 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 27  , 	 9 	 , 	 -10 	 }, // 	 0.0
{	42 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 24  , 	 9 	 , 	 -12 	 }, // 	 0.0
{	43 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 21  , 	 0 	 , 	 1 	     }, // 	 0.0
{	44 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 9 	 , 	 0 	 , 	 -9 	 }, // 	 0.0
{	45 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 18  , 	 0 	 , 	 -11 	 }, // 	 0.0
{	46 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 21  , 	 0 	 , 	 4 	     }, // 	 0.0
{	47 	 , 	 -18 	 , 	 33 	 , 	 17  , 	 15  , 	 0 	 , 	 0 	     }, // 	 0.0
{	48 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 18  , 	 0 	 , 	 -8 	 }, // 	 0.0
{	49 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 3 	 , 	 12  , 	 -10 	 }, // 	 0.0
{	50 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 0 	 , 	 0 	 , 	 12 	 }, // 	 0.0
{	51 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 27  , 	 9 	 , 	 -12 	 }, // 	 0.0
{	52 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 9 	 , 	 0 	 , 	 5 	     }, // 	 0.0
{	53 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 12  , 	 12  , 	 2 	     }, // 	 0.0
{	54 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 18  , 	 0 	 , 	 -8 	 }, // 	 0.0
{	55 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 25  , 	 0 	 , 	 3 	     }, // 	 0.0
{	56 	 , 	 -18 	 , 	 33 	 , 	 17  , 	 28  , 	 0 	 , 	 -4 	 }, // 	 0.0
{	57 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 29  , 	 12  , 	 -5 	 }, // 	 0.0
{	58 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 30  , 	 0 	 , 	 -10 	 }, // 	 0.0
{	59 	 , 	 -18 	 , 	 33 	 , 	 17  , 	 21  , 	 0 	 , 	 6 	     }, // 	 0.0
{	60 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 12  , 	 9 	 , 	 -5 	 }, // 	 0.0
{	61 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 27  , 	 0 	 , 	 13 	 }, // 	 0.0
{	62 	 , 	 -18 	 , 	 33 	 , 	 17  , 	 6 	 , 	 9 	 , 	 15 	 }, // 	 0.0
{	63 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 18  , 	 9 	 , 	 15 	 }, // 	 0.0
{	64 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 24  , 	 9 	 , 	 4 	     }, // 	 0.0
{	65 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 18  , 	 12  , 	 -9 	 }, // 	 0.0
{	66 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 28  , 	 9 	 , 	 8 	     }, // 	 0.0
{	67 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 21  , 	 12  , 	 19 	 }, // 	 0.0
{	68 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 25  , 	 9 	 , 	 7 	     }, // 	 0.0
{	69 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 21  , 	 9 	 , 	 18 	 }, // 	 0.0
{	70 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 27  , 	 12  , 	 16 	 }, // 	 0.0
{	71 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 21  , 	 9 	 , 	 14 	 }, // 	 0.0
{	72 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 28  , 	 9 	 , 	 8 	     }, // 	 0.0
{	73 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 27  , 	 12  , 	 7 	     }, // 	 0.33
{	74 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 24  , 	 0 	 , 	 6 	     }, // 	 0.67
{	75 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 9 	 , 	 12  , 	 16 	 }, // 	 0.33
{	76 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 25  , 	 12  , 	 12 	 }, // 	 0.67
{	77 	 , 	 -18 	 , 	 33 	 , 	 17  , 	 28  , 	 12  , 	 5 	     }, // 	 0.33
{	78 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 29  , 	 12  , 	 10 	 }, // 	 0.67
{	79 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 18  , 	 12  , 	 11 	 }, // 	 0.33
{	80 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 21  , 	 9 	 , 	 6 	     }, // 	 0.33
{	81 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 27  , 	 12  , 	 15 	 }, // 	 1.0
{	82 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 27  , 	 12  , 	 16 	 }, // 	 1.67
{	83 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 26  , 	 0 	 , 	 19 	 }, // 	 0.33
{	84 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 27  , 	 9 	 , 	 4 	     }, // 	 4.33
{	85 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 27  , 	 9 	 , 	 11 	 }, // 	 0.67
{	86 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 25  , 	 0 	 , 	 17 	 }, // 	 4.0
{	87 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 27  , 	 9 	 , 	 7 	     }, // 	 5.67
{	88 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 28  , 	 0 	 , 	 16 	 }, // 	 0.0
{	89 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 29  , 	 9 	 , 	 13 	 }, // 	 1.33
{	90 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 26  , 	 9 	 , 	 17 	 }, // 	 11.0
{	91 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 24  , 	 12  , 	 11 	 }, // 	 10.0
{	92 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 29  , 	 12  , 	 13 	 }, // 	 3.0
{	93 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 21  , 	 9 	 , 	 19 	 }, // 	 0.67
{	94 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 27  , 	 12  , 	 11 	 }, // 	 9.33
{	95 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 30  , 	 9 	 , 	 18 	 }, // 	 1.0
{	96 	 , 	 -12 	 , 	 33 	 , 	 17  , 	 30  , 	 12  , 	 16 	 }, // 	 8.67
{	97 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 30  , 	 9 	 , 	 14 	 }, // 	 10.0
{	98 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 25  , 	 12  , 	 17 	 }, // 	 11.0
{	99 	 , 	 -6 	 , 	 33 	 , 	 17  , 	 28  , 	 12  , 	 15 	 }, // 	 0.67
{	100  , 	 -6 	 , 	 33 	 , 	 17  , 	 30  , 	 12  , 	 14 	 }, // 	 7.67
{	101  , 	 -6 	 , 	 33 	 , 	 17  , 	 30  , 	 9 	 , 	 18 	 }, // 	 7.67
{	102  , 	 -6 	 , 	 33 	 , 	 17  , 	 28  , 	 12  , 	 18 	 }, // 	 85.67
{	103  , 	 -6 	 , 	 33 	 , 	 17  , 	 30  , 	 12  , 	 17 	 }, // 	 43.0
{	104  , 	 -6 	 , 	 33 	 , 	 17  , 	 29  , 	 12  , 	 19 	 }, // 	 68.67
{	105  , 	 -6 	 , 	 33 	 , 	 17  , 	 30  , 	 12  , 	 19 	 }, // 	 24.33
};

// gain table for 3.6GHz with CBRS board
// gainTable  format: [total_gain, ATTN, LNA1, LNA2, LNA, TIA, PGA]
int gainTableRx_HI[NUM_RX_GAIN_LEVELS_HI][7] = {                        //   EVM
{	3 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -12 	 }, // 	 4.0
{	4 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -11 	 }, // 	 10.0
{	5 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -10 	 }, // 	 3.0
{	6 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -12 	 }, // 	 2.33
{	7 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -11 	 }, // 	 2.0
{	8 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -7 	 }, // 	 2.0
{	9 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -12 	 }, // 	 1.67
{	10 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -11 	 }, // 	 1.0
{	11 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -10 	 }, // 	 1.0
{	12 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -12 	 }, // 	 1.33
{	13 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -5 	 }, // 	 1.67
{	14 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -4 	 }, // 	 1.0
{	15 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 3 	 , 	 0 	 , 	 -9 	 }, // 	 1.0
{	16 	 , 	 -18 	 , 	 33 	 , 	 0 	 , 	 9 	 , 	 0 	 , 	 -8 	 }, // 	 1.0
{	17 	 , 	 -12 	 , 	 33 	 , 	 0 	 , 	 6 	 , 	 0 	 , 	 -10 	 }, // 	 1.0
{	18 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 0 	 , 	 0 	 , 	 -9 	 }, // 	 1.0
{	19 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 0 	 , 	 0 	 , 	 -10 	 }, // 	 0.33
{	20 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 3 	 , 	 0 	 , 	 -12 	 }, // 	 0.67
{	21 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 3 	 , 	 0 	 , 	 -11 	 }, // 	 0.0
{	22 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 3 	 , 	 0 	 , 	 -10 	 }, // 	 0.33
{	23 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 0 	 , 	 0 	 , 	 -12 	 }, // 	 0.0
{	24 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 6 	 , 	 0 	 , 	 -11 	 }, // 	 0.0
{	25 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 0 	 , 	 0 	 , 	 -4 	 }, // 	 0.0
{	26 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 0 	 , 	 0 	 , 	 -9 	 }, // 	 0.0
{	27 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 0 	 , 	 9 	 , 	 -11 	 }, // 	 0.0
{	28 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 0 	 , 	 0 	 , 	 -1 	 }, // 	 0.0
{	29 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 3 	 , 	 0 	 , 	 -9 	 }, // 	 0.0
{	30 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 6 	 , 	 0 	 , 	 -5 	 }, // 	 0.0
{	31 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 3 	 , 	 9 	 , 	 -10 	 }, // 	 0.0
{	32 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 0 	 , 	 0 	 , 	 -3 	 }, // 	 0.0
{	33 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 3 	 , 	 9 	 , 	 -8 	 }, // 	 0.0
{	34 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 12  , 	 0 	 , 	 -7 	 }, // 	 0.0
{	35 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 6 	 , 	 0 	 , 	 -12 	 }, // 	 0.0
{	36 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 6 	 , 	 0 	 , 	 -11 	 }, // 	 0.0
{	37 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 12  , 	 0 	 , 	 -4 	 }, // 	 0.0
{	38 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 9 	 , 	 0 	 , 	 -6 	 }, // 	 0.0
{	39 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 0 	 , 	 9 	 , 	 -5 	 }, // 	 0.0
{	40 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 9 	 , 	 0 	 , 	 -10 	 }, // 	 0.0
{	41 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 15  , 	 0 	 , 	 -9 	 }, // 	 0.0
{	42 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 3 	 , 	 9 	 , 	 1 	     }, // 	 0.0
{	43 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 15  , 	 9 	 , 	 -10 	 }, // 	 0.0
{	44 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 15  , 	 12  , 	 -12 	 }, // 	 0.0
{	45 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 9 	 , 	 0 	 , 	 1 	     }, // 	 0.0
{	46 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 12  , 	 0 	 , 	 5 	     }, // 	 0.0
{	47 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 24  , 	 0 	 , 	 -6 	 }, // 	 0.0
{	48 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 15  , 	 0 	 , 	 4 	     }, // 	 0.0
{	49 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 29  , 	 0 	 , 	 -9 	 }, // 	 0.0
{	50 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 18  , 	 0 	 , 	 -9 	 }, // 	 0.0
{	51 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 12  , 	 0 	 , 	 -2 	 }, // 	 0.0
{	52 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 12  , 	 0 	 , 	 11 	 }, // 	 0.0
{	53 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 3 	 , 	 9 	 , 	 12 	 }, // 	 0.0
{	54 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 0 	 , 	 9 	 , 	 4 	     }, // 	 0.0
{	55 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 25  , 	 0 	 , 	 -5 	 }, // 	 0.0
{	56 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 15  , 	 0 	 , 	 0 	     }, // 	 0.0
{	57 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 0 	 , 	 12  , 	 4 	     }, // 	 0.0
{	58 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 29  , 	 0 	 , 	 -12 	 }, // 	 0.0
{	59 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 0 	 , 	 12  , 	 6 	     }, // 	 0.0
{	60 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 30  , 	 0 	 , 	 -5 	 }, // 	 0.0
{	61 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 3 	 , 	 9 	 , 	 8 	     }, // 	 0.0
{	62 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 29  , 	 9 	 , 	 -11 	 }, // 	 0.0
{	63 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 26  , 	 12  , 	 -10 	 }, // 	 0.0
{	64 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 28  , 	 0 	 , 	 1 	     }, // 	 0.0
{	65 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 26  , 	 9 	 , 	 -5 	 }, // 	 0.0
{	66 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 30  , 	 12  , 	 -11 	 }, // 	 0.0
{	67 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 25  , 	 9 	 , 	 -8 	 }, // 	 0.0
{	68 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 25  , 	 9 	 , 	 -7 	 }, // 	 0.0
{	69 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 25  , 	 12  , 	 -3 	 }, // 	 0.0
{	70 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 28  , 	 12  , 	 -5 	 }, // 	 0.0
{	71 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 26  , 	 12  , 	 -8 	 }, // 	 0.0
{	72 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 29  , 	 12  , 	 -4 	 }, // 	 0.67
{	73 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 28  , 	 12  , 	 6 	     }, // 	 1.0
{	74 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 28  , 	 12  , 	 -1 	 }, // 	 0.67
{	75 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 21  , 	 12  , 	 13 	 }, // 	 0.67
{	76 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 27  , 	 9 	 , 	 -1 	 }, // 	 1.0
{	77 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 27  , 	 9 	 , 	 0 	     }, // 	 0.67
{	78 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 28  , 	 0 	 , 	 9 	     }, // 	 1.0
{	79 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 30  , 	 9 	 , 	 11 	 }, // 	 0.67
{	80 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 29  , 	 12  , 	 10 	 }, // 	 0.67
{	81 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 24  , 	 9 	 , 	 7 	     }, // 	 1.0
{	82 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 29  , 	 12  , 	 14 	 }, // 	 0.0
{	83 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 26  , 	 12  , 	 10 	 }, // 	 1.0
{	84 	 , 	 -6 	 , 	 33 	 , 	 0 	 , 	 29  , 	 12  , 	 16 	 }, // 	 1.0
{	85 	 , 	 -12 	 , 	 33 	 , 	 14  , 	 28  , 	 12  , 	 10 	 }, // 	 1.0
{	86 	 , 	 -18 	 , 	 33 	 , 	 14  , 	 29  , 	 12  , 	 16 	 }, // 	 1.0
{	87 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 30  , 	 12  , 	 4 	     }, // 	 0.67
{	88 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 29  , 	 12  , 	 6 	     }, // 	 0.33
{	89 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 21  , 	 12  , 	 15 	 }, // 	 4.33
{	90 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 18  , 	 12  , 	 19 	 }, // 	 8.0
{	91 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 27  , 	 9 	 , 	 14 	 }, // 	 14.33
{	92 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 27  , 	 12  , 	 12 	 }, // 	 15.0
{	93 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 24  , 	 9 	 , 	 19 	 }, // 	 0.33
{	94 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 28  , 	 9 	 , 	 16 	 }, // 	 15.0
{	95 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 28  , 	 9 	 , 	 17 	 }, // 	 15.33
{	96 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 27  , 	 9 	 , 	 19 	 }, // 	 1.0
{	97 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 30  , 	 12  , 	 14 	 }, // 	 3.0
{	98 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 28  , 	 12  , 	 17 	 }, // 	 19.33
{	99 	 , 	 -6 	 , 	 33 	 , 	 14  , 	 28  , 	 12  , 	 18 	 }, // 	 30.0
{	100  , 	 -6 	 , 	 33 	 , 	 14  , 	 29  , 	 12  , 	 18 	 }, // 	 53.0
{	101  , 	 -6 	 , 	 33 	 , 	 14  , 	 29  , 	 12  , 	 19 	 }, // 	 6.67
{	102  , 	 -6 	 , 	 33 	 , 	 14  , 	 30  , 	 12  , 	 19 	 }, // 	 22.33
};
*/


// Column0: value in dB
// Column1: setting written into register
int lnaTable[31][2] = {
{ 0 , 1 }, 
{ 1 , 1 }, 
{ 2 , 1 }, 
{ 3 , 2 }, 
{ 4 , 2 }, 
{ 5 , 2 }, 
{ 6 , 3 }, 
{ 7 , 3 }, 
{ 8 , 3 }, 
{ 9 , 4 }, 
{ 10 , 4 }, 
{ 11 , 4 }, 
{ 12 , 5 }, 
{ 13 , 5 }, 
{ 14 , 5 }, 
{ 15 , 6 }, 
{ 16 , 6 }, 
{ 17 , 6 }, 
{ 18 , 7 }, 
{ 19 , 7 }, 
{ 20 , 7 }, 
{ 21 , 8 }, 
{ 22 , 8 }, 
{ 23 , 8 }, 
{ 24 , 9 }, 
{ 25 , 10 }, 
{ 26 , 11 }, 
{ 27 , 12 }, 
{ 28 , 13 }, 
{ 29 , 14 }, 
{ 30 , 15 } 
};

// Column0: value in dB
// Column1: setting written into register
int tiaTable[13][2] = {
{ 0 , 1 }, 
{ 1 , 1 }, 
{ 2 , 1 }, 
{ 3 , 1 }, 
{ 4 , 1 }, 
{ 5 , 1 }, 
{ 6 , 1 }, 
{ 7 , 1 }, 
{ 8 , 1 }, 
{ 9 , 2 }, 
{ 10 , 2 }, 
{ 11 , 2 }, 
{ 12 , 3 } 
};


// Column0: value in dB
// Column1: setting written into register - (gain)
// Column2: RCC_CTL_PGA_RBB - value written into register - (controls stability of operational amplifier)
// Column3: C_CTL_PGA_RBB - value written into register - (controls value of feedback capacitor)
int pgaTable[32][4] = {
{ -12 , 0 , 31 , 3 }, 
{ -11 , 1 , 30 , 3 }, 
{ -10 , 2 , 29 , 3 }, 
{ -9 , 3 , 29 , 3 }, 
{ -8 , 4 , 28 , 3 }, 
{ -7 , 5 , 27 , 3 }, 
{ -6 , 6 , 26 , 3 }, 
{ -5 , 7 , 26 , 3 }, 
{ -4 , 8 , 25 , 2 }, 
{ -3 , 9 , 24 , 2 }, 
{ -2 , 10 , 24 , 2 }, 
{ -1 , 11 , 23 , 2 }, 
{ 0 , 12 , 23 , 2 }, 
{ 1 , 13 , 22 , 1 }, 
{ 2 , 14 , 22 , 1 }, 
{ 3 , 15 , 21 , 1 }, 
{ 4 , 16 , 21 , 1 }, 
{ 5 , 17 , 20 , 1 }, 
{ 6 , 18 , 20 , 1 }, 
{ 7 , 19 , 19 , 1 }, 
{ 8 , 20 , 19 , 1 }, 
{ 9 , 21 , 19 , 0 }, 
{ 10 , 22 , 18 , 0 }, 
{ 11 , 23 , 18 , 0 }, 
{ 12 , 24 , 18 , 0 }, 
{ 13 , 25 , 17 , 0 }, 
{ 14 , 26 , 17 , 0 }, 
{ 15 , 27 , 17 , 0 }, 
{ 16 , 28 , 16 , 0 }, 
{ 17 , 29 , 16 , 0 }, 
{ 18 , 30 , 16 , 0 }, 
{ 19 , 31 , 16 , 0 }
};
